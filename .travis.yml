language: android

jdk:
  - oraclejdk8

stages:
- name: buil_staging
  if: branch = onprogress AND type = push

jobs:
  include:
    - stage: build_staging
      script:
        - echo "org.gradle.jvmargs=-Xmx1536m" >> gradle.properties
        - echo "SYMBOLIC_REDIRECT_URI=$SYMBOLIC_REDIRECT_URI_STAG" >> gradle.properties
        - echo "PANTAU_BASE_URL=$PANTAU_BASE_URL_STAG" >> gradle.properties
        - echo "PANTAU_BASE_URL_NO_SCHEME=$PANTAU_BASE_URL_NO_SCHEME_STAG" >> gradle.properties
        - echo "PANTAU_OAUTH_URL=$PANTAU_OAUTH_URL_STAG" >> gradle.properties
        - echo "WORD_STADIUM_BASE_URL=$WORD_STADIUM_BASE_URL_STAG" >> gradle.properties
        - echo "SYMBOLIC_URL=$SYMBOLIC_URL_STAG" >> gradle.properties
        - echo "SYMBOLIC_URL_NO_SCHEME=$SYMBOLIC_URL_NO_SCHEME_STAG" >> gradle.properties
        - echo "SYMBOLIC_CLIENT_ID=$SYMBOLIC_CLIENT_ID_STAG" >> gradle.properties
        - echo "SYMBOLIC_CLIENT_SECRET=$SYMBOLIC_CLIENT_SECRET_STAG" >> gradle.properties
        - echo "FACEBOOK_APP_ID=$FACEBOOK_APP_ID_STAG" >> gradle.properties
        - echo "FACEBOOK_LOGIN_PROTOCOL_SCHEME=$FACEBOOK_LOGIN_PROTOCOL_SCHEME_STAG" >> gradle.properties
        - echo "TWITTER_API_KEY=$TWITTER_API_KEY_STAG" >> gradle.properties
        - echo "TWITTER_SECRET=$TWITTER_SECRET_STAG" >> gradle.properties
        - echo "PANTAU_CLIENT_ID=$PANTAU_CLIENT_ID_STAG" >> gradle.properties
        - echo "PANTAU_CLIENT_SECRET=$PANTAU_CLIENT_SECRET_STAG" >> gradle.properties
        - echo "PANTAU_WEB_URL=$PANTAU_WEB_URL_STAG" >> gradle.properties
        - echo "PANTAU_WEB_URL_NO_SCHEME=$PANTAU_WEB_URL_NO_SCHEME_STAG" >> gradle.properties
        - echo "PANTAU_SHARE_URL=$PANTAU_SHARE_URL_STAG" >> gradle.properties
        - echo "PANTAU_SHARE_URL_NO_SCHEME=$PANTAU_SHARE_URL_NO_SCHEME_STAG" >> gradle.properties
        - echo "OPINIUM_SERVICE_BASE_URL=$OPINIUM_SERVICE_BASE_URL_STAG" >> gradle.properties
        - echo "OPINIUM_SERVICE_API_KEY=$OPINIUM_SERVICE_API_KEY_STAG" >> gradle.properties
        - echo "android.useAndroidX=true" >> gradle.properties
        - echo "android.enableJetifier=true" >> gradle.properties
        - mkdir $PWD/app/src/staging
        - mkdir $PWD/app/src/production
        - echo "$GOOGLE_SERVICE_JSON_STAG" >> $PWD/app/src/staging/google-services.json
        - echo "$GOOGLE_SERVICE_JSON_PROD" >> $PWD/app/src/production/google-services.json
        - ./gradlew assembleStagingDebug
        - export ANDROID_APK_PATH=$PWD/app/build/outputs/apk
        - ls $PWD
        - ls $ANDROID_APK_PATH
        - mv $ANDROID_APK_PATH/staging/debug/app-staging-debug.apk $ANDROID_APK_PATH/staging/debug/app-staging-debug-${TRAVIS_JOB_ID}.apk
        - curl -F file=@$ANDROID_APK_PATH/staging/debug/app-staging-debug-${TRAVIS_JOB_ID}.apk -F channels=$SLACK_CHANNEL_ANDROID -F token=$SLACK_TOKEN https://slack.com/api/files.upload

android:
  components:
    # Uncomment the lines below if you want to
    # use the latest revision of Android SDK Tools
    # - tools
    # - platform-tools

    # The BuildTools version used by your project
    - build-tools-28.0.3

    # The SDK version used to compile your project
    - android-28

    # Additional components
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository

    # Specify at least one system image,
    # if you need to run emulator(s) during your tests
#    - sys-img-x86-android-26
#    - sys-img-armeabi-v7a-android-17