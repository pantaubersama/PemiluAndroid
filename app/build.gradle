apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: "$project.rootDir/config/dependencies.gradle"
apply from: "$project.rootDir/config/app-version.gradle"
apply plugin: 'io.fabric'

android {
    signingConfigs {
        config {
            keyAlias 'pantau_bersama'
            keyPassword 'barokah100'
            storePassword 'barokah100'
            storeFile file('../pantau_bersama.keystore')
        }
    }
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    flavorDimensions "default"
    defaultConfig {
        applicationId appApplicationId
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            applicationIdSuffix ".staging"
            minifyEnabled false
            debuggable true
        }
        buildTypes.each {
            it.buildConfigField("String", "PANTAU_CLIENT_ID", PANTAU_CLIENT_ID)
            it.buildConfigField("String", "PANTAU_CLIENT_SECRET", PANTAU_CLIENT_SECRET)
            it.buildConfigField("String", "PANTAU_BASE_URL", PANTAU_BASE_URL)
            it.buildConfigField("String", "PANTAU_OAUTH_URL", PANTAU_OAUTH_URL)
            it.buildConfigField("String", "WORD_STADIUM_BASE_URL", WORD_STADIUM_BASE_URL)
            it.buildConfigField("String", "NOTIFICATION_BASE_URL", NOTIFICATION_BASE_URL)
            it.buildConfigField("String", "SYMBOLIC_URL", SYMBOLIC_URL)
            it.buildConfigField("String", "SYMBOLIC_CLIENT_ID", SYMBOLIC_CLIENT_ID)
            it.buildConfigField("String", "SYMBOLIC_CLIENT_SECRET", SYMBOLIC_CLIENT_SECRET)
            it.buildConfigField("String", "SYMBOLIC_REDIRECT_URI", SYMBOLIC_REDIRECT_URI)
            it.buildConfigField("String", "PANTAU_WEB_URL", PANTAU_WEB_URL)
            it.resValue("string", "symbolic_url", SYMBOLIC_URL_NO_SCHEME)
            it.resValue("string", "facebook_app_id", FACEBOOK_APP_ID)
            it.resValue("string", "facebook_login_protocol_scheme", FACEBOOK_LOGIN_PROTOCOL_SCHEME)
            it.resValue("string", "twitter_api_key", TWITTER_API_KEY)
            it.resValue("string", "twitter_secret_key", TWITTER_SECRET)
            it.resValue("string", "pantau_base_url_no_scheme", PANTAU_BASE_URL_NO_SCHEME)
            it.resValue("string", "pantau_web_url_no_scheme", PANTAU_WEB_URL_NO_SCHEME)
            it.resValue("string", "share_url", PANTAU_SHARE_URL)
            it.resValue("string", "share_url_no_scheme", PANTAU_SHARE_URL_NO_SCHEME)
        }
    }
    productFlavors {
        production {
        }
        staging {
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }
}

androidExtensions {
    experimental = true
}

repositories {
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    implementation project(':instant')
    implementation project(':base')
    implementation designLibs
    implementation networkLibs
    implementation firebaseLibs
    implementation rxJavaLibs
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation easyPermission
    implementation timber
    implementation glide
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    kapt glideCompiler
    implementation roundedImageView
    implementation symbolic
    implementation flexbox
    implementation dagger
    implementation lottie
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha01'
    implementation chromeCustomTab
    implementation expandableLayout
    implementation rxBinding
    implementation cameraKitLibs
    implementation compressor
    implementation facebook_sdk
    implementation twitter_sdk
    implementation archComponentLibs
    implementation dots_indicator
    implementation "com.orhanobut:logger:2.2.0"
    kapt daggerCompiler
    testImplementation unitTestLibs
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
    ktlint "com.github.shyiko:ktlint:0.29.0"
}


task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // args "--reporter=checkstyle, output=${buildDir}/ktlint.xml
}
apply plugin: 'com.google.gms.google-services'
