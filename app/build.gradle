apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: "$project.rootDir/config/dependencies.gradle"
apply from: "$project.rootDir/config/app-version.gradle"
apply plugin: 'io.fabric'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    flavorDimensions "default"
    defaultConfig {
        applicationId appApplicationId
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        versionCode appVersionCode
        versionName appVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            it.buildConfigField("String", "PANTAU_BASE_URL", PANTAU_BASE_URL_PROD)
            it.buildConfigField("String", "PANTAU_OAUTH_URL", PANTAU_OAUTH_URL_PROD)
            it.buildConfigField("String", "WORD_STADIUM_BASE_URL", WORD_STADIUM_BASE_URL_PROD)
            it.buildConfigField("String", "SYMBOLIC_URl", SYMBOLIC_URL_PROD)
            it.buildConfigField("String", "SYMBOLIC_CLIENT_ID", SYMBOLIC_CLIENT_ID_STAG)
            it.buildConfigField("String", "SYMBOLIC_CLIENT_SECRET", SYMBOLIC_CLIENT_SECRET_PROD)
            it.buildConfigField("String", "SYMBOLIC_REDIRECT_URI", SYMBOLIC_REDIRECT_URI)
            manifestPlaceholders = [SYMBOLIC_URL: SYMBOLIC_URL_NO_SCHEME_PROD, PANTAU_BASE_URL_NO_SCHEME: PANTAU_BASE_URL_NO_SCHEME_PROD]
        }
        debug {
            applicationIdSuffix ".staging"
            minifyEnabled false
            debuggable true
            it.buildConfigField("String", "PANTAU_BASE_URL", PANTAU_BASE_URL_STAG)
            it.buildConfigField("String", "PANTAU_OAUTH_URL", PANTAU_OAUTH_URL_STAG)
            it.buildConfigField("String", "WORD_STADIUM_BASE_URL", WORD_STADIUM_BASE_URL_STAG)
            it.buildConfigField("String", "SYMBOLIC_URL", SYMBOLIC_URL_STAG)
            it.buildConfigField("String", "SYMBOLIC_CLIENT_ID", SYMBOLIC_CLIENT_ID_STAG)
            it.buildConfigField("String", "SYMBOLIC_CLIENT_SECRET", SYMBOLIC_CLIENT_SECRET_STAG)
            it.buildConfigField("String", "SYMBOLIC_REDIRECT_URI", SYMBOLIC_REDIRECT_URI)
            manifestPlaceholders = [SYMBOLIC_URL: SYMBOLIC_URL_NO_SCHEME_STAG, PANTAU_BASE_URL_NO_SCHEME: PANTAU_BASE_URL_NO_SCHEME_STAG]
        }

        buildTypes.each {
            it.buildConfigField("String", "PANTAU_CLIENT_ID", PANTAU_CLIENT_ID)
            it.buildConfigField("String", "PANTAU_CLIENT_SECRET", PANTAU_CLIENT_SECRET)
        }
    }

    productFlavors {
        production {
        }
        staging {
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

}

androidExtensions {
    experimental = true
}

repositories {
    jcenter()
}

configurations {
    ktlint
}

dependencies {
    implementation project(':instant')
    implementation project(':base')

    implementation designLibs
    implementation networkLibs
    implementation firebaseLibs
    implementation rxJavaLibs
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation easyPermission
    implementation timber
    implementation glide
    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
    kapt glideCompiler
    implementation roundedImageView
    implementation symbolic
    implementation flexbox
    implementation dagger
    implementation lottie
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha01'
    implementation chromeCustomTab
    implementation expandableLayout
    implementation rxBinding
    implementation compressor
    kapt daggerCompiler

    testImplementation unitTestLibs

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    ktlint "com.github.shyiko:ktlint:0.29.0"
}


task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.github.shyiko.ktlint.Main"
    args "src/**/*.kt"
    // args "--reporter=checkstyle, output=${buildDir}/ktlint.xml
}
apply plugin: 'com.google.gms.google-services'
